<!--
   $Header: /nfs/slac/g/glast/ground/cvs/calibUtil/xml/badStrips.dtd,v 1.5 2002/05/07 17:18:34 jrb Exp $

   /**  @file       genCalib.dtd
        @authors    J. Bogart

        dtd for example xml calibration data set.   It contains the
        standard header section followed by data.  The data can be
        viewed as one big struct, containing an arbitrary collection of
        primitives (e.g. single int or array of floats) and 
        structs.  Nesting of structs may occur to any level.

    */

    Would be good to switch to XML schema so that common header elements
    could be included easily in schemata for different calibration types
    and so that more of value verification could be moved to parser
 -->
       
<!-- Container for all the header/metadata type information to be
     included here.  Complete metadata will be found in the calibration
     MySQL database. 

     Description of attributes:

            instrument    - one of "LAT", "EM", etc. 
            timestamp     - when the file was written (date and time)
            locale        - where the data was taken or procedure run
            calType       - one of "tkr_HotStrips", "cal_lightAtt",
                            etc.
            formatVersion - sufficient versioning information so that
                            software attempting to read the file can
                            determine if it supports this version. 
                            [Might get rid of this here and just keep
                            it in the MySQL metadata table]
 -->

<!ELEMENT calib (header, data) >

<!ELEMENT  header  (inputSample) >
<!ATTLIST header  
   instrument  (LAT | BFEM | BTEM | EM | CU) #REQUIRED
   timestamp   NMTOKEN #REQUIRED
   locale      NMTOKEN #REQUIRED
   calType     NMTOKEN #REQUIRED
   fmtVersion  NMTOKEN #IMPLIED >

<!-- Description of events used as input to the procedure 
     Start- and stop-times should be timestamps of earliest and
     latest events included in sample
-->
<!ELEMENT inputSample (#PCDATA) >
<!ATTLIST inputSample  startTime NMTOKEN #REQUIRED
                       stopTime  NMTOKEN #REQUIRED
                       triggers  NMTOKENS #REQUIRED 
                       source    NMTOKENS #REQUIRED
                       mode      NMTOKEN  #REQUIRED>


<!ELEMENT data (leaf | struct)+ >
<!ATTLIST data  name ID #REQUIRED >

<!ELEMENT struct  (leaf | struct)+ >
<!ATTLIST struct  name  ID       #REQUIRED>



<!-- Do we also need to allow for string type? -->
<!ELEMENT leaf EMPTY>
<!ATTLIST leaf  dtype (int | unsigned | float) #REQUIRED
                     name  ID                  #REQUIRED
                     units NMTOKEN             #IMPLIED 
                     value NMTOKENS            #REQUIRED >

