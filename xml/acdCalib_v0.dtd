<!--
   $Header: /nfs/slac/g/glast/ground/cvs/calibUtil/xml/calCalib_v2.dtd,v 1.5 2004/02/17 17:54:03 jrb Exp $

   /**  @file       calCalib.dtd
        @authors    J. Bogart

        dtd for ACD calibration data types

    */

 -->

<!-- 
   Overall structure is some header information followed by
   a sequence of tower data.  Tower data is made up
   of layer data, in turn made up of data for individual
   crystals, which consists of data for (1 or 2, depending
   on calibration type) faces.  

   The header information comes in two parts:
     "generic" is relevant to any sort of calibration data,
               not just that from the CAL, such as the
               name of the instrument being calibrated.
               See further comments above the generic element
               declaration
     "dimension" contains all the parameters necessary to figure 
               out which data goes with which hardware entity.
               See further comments above the dimension element
               declaration
  -->  

<!ELEMENT acdCalib (generic, dimension, face* ) >
       
<!-- Container for all the header/metadata type information to be
     included here.  Complete metadata will be found in the calibration
     MySQL database. 

     Description of attributes:

            instrument    - one of "flight", "EM", etc.  Could also
                            be implemented as enumeration rather than
                            NMTOKEN
            timestamp     - when the file was written (date and time)
            calType       - one of "TKRBadStrips", "CALLightAttenuation",
                            etc.
            formatVersion - sufficient versioning information so that
                            software attempting to read the file can
                            determine if it supports this version. 
                            [Might get rid of this here and just keep
                            it in the MySQL metadata table]
 -->
<!ELEMENT  generic  (inputSample?) >
<!ATTLIST generic  
   instrument  (LAT | BFEM | BTEM | EM | EM2 | CU) #REQUIRED
   timestamp   NMTOKEN #REQUIRED
   calibType ( ACD_Ped | ACD_ElecGain | ACD_Eff |
              ACD_ThreshHigh | ACD_ThreshVeto)    #REQUIRED
   DTDVersion  NMTOKEN "v1r0"       
   fmtVersion  NMTOKEN #REQUIRED >

<!-- Description of events used as input to the procedure 
     Start- and stop-times should be timestamps of earliest and
     latest events included in sample.
     inputSample is (for now) optional.
-->
<!ELEMENT inputSample (#PCDATA) >
<!ATTLIST inputSample  startTime NMTOKEN #REQUIRED
                       stopTime  NMTOKEN #REQUIRED
                       triggers  NMTOKENS #REQUIRED 
                       source    NMTOKENS #REQUIRED
                       mode      NMTOKEN  #REQUIRED>

<!-- Describe how the data is dimensioned:
        number of faces 
        number of rows (this actually varies, depending on face.
                         max goes here)
        number of columns (number of tiles or ribbons in a row)
        number of PMT      (2)
        number of ranges     (fixed at 2? for now just default to 2) 

   Use the following conventions to determine which data element 
   corresponds to a particular physical face, row, column, PMT, range
   gain range:
       * Tower number is computed from row and column as
                 tower = column + (nCol)*row
       * The data can be viewed as a 5-dimensional array where
         the indices from most- to least-significant are
              tower
              layer
              xtal   (often called "column" in calorimeter code)
              face
              range
         So the first two data elements will correspond to 
           (tower=0,layer=0, xtal=0, face=0, range=0)
           (tower=0,layer=0, xtal=0, face=0, range=1)
 
         The total number of data elements is just
                nRow*nCol*nLayer*nXtal*nFace*nRange

 -->
<!-- Unlike calibrations for CAL, it is never the case that the
     total number of innermost elements will be determined by
     information in <dimension>; all it gives us is a max
     value for each field
 -->
  
<!ELEMENT dimension EMPTY>
<!ATTLIST dimension nFace NMTOKEN  #REQUIRED
                    nRow NMTOKEN  #REQUIRED
                    nCol NMTOKEN #REQUIRED
                    nPmt  NMTOKEN  "2"
                    nRange NMTOKEN "2"  
                    exact NMTOKEN #FIXED "false"     >

<!ELEMENT face (row+) >
<!ATTLIST face iFace NMTOKEN #REQUIRED>


<!ELEMENT row (col+) >
<!ATTLIST row iRow NMTOKEN #REQUIRED>

<!ELEMENT col (pmt+) >
<!ATTLIST col iCol NMTOKEN #REQUIRED>

<!ELEMENT pmt (acdPed* | acdGain* ) >
<!ATTLIST pmt iPmt NMTOKEN #REQUIRED>

<!ENTITY  % ranges  'range (0 | 1) #REQUIRED ' >

<!ELEMENT acdPed  EMPTY>
<!ATTLIST acdPed  %ranges;
                  avg NMTOKEN #REQUIRED
                  sig NMTOKEN #REQUIRED >


<!ELEMENT acdGain EMPTY>
<!ATTLIST acdGain %ranges;
                  avg NMTOKEN #REQUIRED
                  sig NMTOKEN #REQUIRED>

